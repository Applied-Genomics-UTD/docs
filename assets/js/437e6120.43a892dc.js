(self.webpackChunkapplied_genomics=self.webpackChunkapplied_genomics||[]).push([[875],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return h}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),m=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=m(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(n),h=a,u=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return n?i.createElement(u,r(r({ref:t},p),{},{components:n})):i.createElement(u,r({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var m=2;m<o;m++)r[m]=n[m];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5946:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var i=n(2122),a=n(9756),o=(n(7294),n(3905)),r={id:"git",title:"Version Control Systems",description:"How to use git",sidebar_label:"Version Control Systems",sidebar_position:1},l={unversionedId:"week_02/git",id:"week_02/git",isDocsHomePage:!1,title:"Version Control Systems",description:"How to use git",source:"@site/docs/week_02/git.md",sourceDirName:"week_02",slug:"/week_02/git",permalink:"/Applied-Genomics/docs/week_02/git",editUrl:"https://github.com/Functional-Genomics-Lab/Applied-Genomics/edit/main/docs/week_02/git.md",version:"current",sidebar_label:"Version Control Systems",sidebarPosition:1,frontMatter:{id:"git",title:"Version Control Systems",description:"How to use git",sidebar_label:"Version Control Systems",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Reproducible Research",permalink:"/Applied-Genomics/docs/week_02/intro"},next:{title:"Build Systems",permalink:"/Applied-Genomics/docs/week_02/make"}},s=[{value:"Why is git important for scientists?",id:"why-is-git-important-for-scientists",children:[]},{value:"Intro to Git",id:"intro-to-git",children:[{value:"So what is Git?",id:"so-what-is-git",children:[]},{value:"VS Code Workflow",id:"vs-code-workflow",children:[]},{value:"So what&#39;s a remote?",id:"so-whats-a-remote",children:[]}]}],m={toc:s};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,i.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"why-is-git-important-for-scientists"},"Why is git important for scientists?"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Research Stage"),(0,o.kt)("th",{parentName:"tr",align:null},"Record Keeping"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Data Collection & Experiment"),(0,o.kt)("td",{parentName:"tr",align:null},"Record parameters and changes in lab notebook(paper/digital)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Data processing & Analysis"),(0,o.kt)("td",{parentName:"tr",align:null},"?")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Version control of code == lab notebook of experiment\n")),(0,o.kt)("p",null,(0,o.kt)("sup",{parentName:"p",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,o.kt)("h2",{id:"intro-to-git"},"Intro to Git"),(0,o.kt)("h3",{id:"so-what-is-git"},"So what is Git?"),(0,o.kt)("p",null,"Modern VCSs also let you easily (and often automatically) answer questions like",(0,o.kt)("sup",{parentName:"p",id:"fnref-2"},(0,o.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- Who wrote this code?\n- When was this particular line of this particular file edited? By whom? Why was it edited?\n- Over the last 1000 revisions, when/why did this break? (And who broke it?)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://imgs.xkcd.com/comics/git.png",alt:"git.png"})),(0,o.kt)("p",null,"In case you get lost:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://missing.csail.mit.edu/2020/version-control/"},"Missing Semester Version Control lecture")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2"},"Pro Git Book")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://try.github.io/"},"Resources to learn Git"))),(0,o.kt)("h3",{id:"vs-code-workflow"},"VS Code Workflow"),(0,o.kt)("h4",{id:"creating-a-repo"},"Creating a repo"),(0,o.kt)("p",null,"First we're going to initialize a git repository. This is just a\nfolder/directory that has it's changes tracked by git."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open up VS Code, make sure you have the ",(0,o.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=FunctionalGenomics.functional-genomics"},"functional genomics extension pack")," installed"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"CTRL+Shift+p")),(0,o.kt)("li",{parentName:"ol"},"Type in and select ",(0,o.kt)("inlineCode",{parentName:"li"},"Git: Initialize Repository"),"."),(0,o.kt)("li",{parentName:"ol"},"Choose a folder. (name it ",(0,o.kt)("inlineCode",{parentName:"li"},"ag-intro"),")"),(0,o.kt)("li",{parentName:"ol"},"Click the Open/Open in new window popup in the bottom right corner")),(0,o.kt)("h4",{id:"first-commit"},"First Commit"),(0,o.kt)("p",null,"Now we're going to make our first change, stage that change, and then commit it."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new file called ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md"),"."),(0,o.kt)("li",{parentName:"ol"},"Add to the first line ",(0,o.kt)("inlineCode",{parentName:"li"},"# ag-intro")," and save."),(0,o.kt)("li",{parentName:"ol"},"Select the git graph icon on the left bar(It should have a blue 1)"),(0,o.kt)("li",{parentName:"ol"},"Click on the + button next to ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md"),".")),(0,o.kt)("p",null,"Our change has now been staged! We need to commit it to the git repo"),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},'Type a message into the "Message" box ("Add README" would be a great message)'),(0,o.kt)("li",{parentName:"ol"},"Hit ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Enter"))),(0,o.kt)("p",null,"That was the first commit!"),(0,o.kt)("h4",{id:"second-commit"},"Second commit"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+p")," and select ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"This is a handy way to jump between files in VS Code"))),(0,o.kt)("li",{parentName:"ol"},"Change the file to have")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-md"},"# ag-intro\n\nThis is a mistake!\nThis will be the second commit\nThis will be the third commit\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Select the git graph icon on the left bar(It should have a blue 1)"),(0,o.kt)("li",{parentName:"ol"},"Click on the + button next to ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md"),".")),(0,o.kt)("p",null,"This time we staged some changes we didn't mean to. We need to remove those and\nbreak our commits up into logical sections, rather than commit everything at\nonce."),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Click on the - button next to ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md")," under Staged Changes.")),(0,o.kt)("p",null,"That just unstaged what we staged before we commited it."),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md")," and this will pull up a ",(0,o.kt)("strong",{parentName:"li"},"diff"),", which is the\ndifference between what's committed to the repo, and the working copy."),(0,o.kt)("li",{parentName:"ol"},'Highlight the 3 and 4 lines, right click and select "Stage Selected Ranges"'),(0,o.kt)("li",{parentName:"ol"},"We want to get rid of the mistake we staged, so click on ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md"),' under\n"Staged Changes", highlight line 2("This is a mistake!"), right click and\nselect "Unstage Selected Ranges".')),(0,o.kt)("p",null,"Now we want to commit our changes:"),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},'Type a message into the "Message" box ("Update README" would be a great message)'),(0,o.kt)("li",{parentName:"ol"},"Hit ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Enter"))),(0,o.kt)("p",null,'Now for practice, commit only the line that has "This will be the third commit"'),(0,o.kt)("h4",{id:"viewing-changes"},"Viewing changes"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'In the Source Control window, open the "COMMITS" drawer. You should see')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"VS Code Commits",src:n(2959).Z})),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},'You can click though the "FILE HISTORY" and view old versions of the file')),(0,o.kt)("h4",{id:"creating-a-remote"},"Creating a remote"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/join"},"Create a GitHub account")),(0,o.kt)("li",{parentName:"ol"},"On the left hand side you should see Repositories and a green button that\nsays New. Click it."),(0,o.kt)("li",{parentName:"ol"},"Give the repo a name. ",(0,o.kt)("inlineCode",{parentName:"li"},"ag-intro")," is recommended."),(0,o.kt)("li",{parentName:"ol"},'Copy the code underneath "...or push an existing repository from the command line"\nShould be something similar to:')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin https://github.com/<username>/ag-intro.git\ngit branch -M main\ngit push -u origin main\n")),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"In VS Code hit ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Shift+~"),", this should open up a terminal in the bottom\nof the screen. Past the commands in there."),(0,o.kt)("li",{parentName:"ol"},"Check your GitHub repo and see if the code got pushed!")),(0,o.kt)("h3",{id:"so-whats-a-remote"},"So what's a remote?"),(0,o.kt)("div",{className:"footnotes"},(0,o.kt)("hr",{parentName:"div"}),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol",id:"fn-1"},"04-git_workshop of HPC",(0,o.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,o.kt)("li",{parentName:"ol",id:"fn-2"},(0,o.kt)("a",{parentName:"li",href:"https://missing.csail.mit.edu/2020/version-control/"},"Missing Semester Version Control lecture"),(0,o.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}p.isMDXComponent=!0},2959:function(e,t,n){"use strict";t.Z=n.p+"assets/images/vs_code_commits-799aa40687c30bc262f461650520319e.png"}}]);