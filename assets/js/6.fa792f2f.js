(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{362:function(t,e,o){t.exports=o.p+"assets/img/vs_code_commits.232fc439.png"},374:function(t,e,o){"use strict";o.r(e);var s=o(45),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("strong",[t._v("This section is meant to introduce some topics, and where to find information,\nbut not be a comprehensive overview itself.")])]),t._v(" "),s("h1",{attrs:{id:"what-we-re-going-to-avoid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-we-re-going-to-avoid"}},[t._v("#")]),t._v(" What we're going to avoid")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://phdcomics.com/comics/archive/phd101212s.gif",alt:'"final".doc'}})]),t._v(" "),s("h1",{attrs:{id:"version-control-systems"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version-control-systems"}},[t._v("#")]),t._v(" Version Control Systems")]),t._v(" "),s("h2",{attrs:{id:"why-is-git-important-for-scientists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-is-git-important-for-scientists"}},[t._v("#")]),t._v(" Why is git important for scientists?")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Research Stage")]),t._v(" "),s("th",[t._v("Record Keeping")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Data Collection & Experiment")]),t._v(" "),s("td",[t._v("Record parameters and changes in lab notebook(paper/digital)")])]),t._v(" "),s("tr",[s("td",[t._v("Data processing & Analysis")]),t._v(" "),s("td",[t._v("?")])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Version control of code == lab notebook of experiment\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("sup",{staticClass:"footnote-ref"},[s("a",{attrs:{href:"#footnote1"}},[t._v("[1]")]),s("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})])]),t._v(" "),s("h2",{attrs:{id:"intro-to-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-git"}},[t._v("#")]),t._v(" Intro to Git")]),t._v(" "),s("h3",{attrs:{id:"so-what-is-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#so-what-is-git"}},[t._v("#")]),t._v(" So what is Git?")]),t._v(" "),s("p",[t._v("Modern VCSs also let you easily (and often automatically) answer questions like"),s("sup",{staticClass:"footnote-ref"},[s("a",{attrs:{href:"#footnote2"}},[t._v("[2]")]),s("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})]),t._v(":")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- Who wrote this code?\n- When was this particular line of this particular file edited? By whom? Why was it edited?\n- Over the last 1000 revisions, when/why did this break? (And who broke it?)\n")])])]),s("p",[s("img",{attrs:{src:"https://imgs.xkcd.com/comics/git.png",alt:"git.png"}})]),t._v(" "),s("p",[t._v("In case you get lost:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://missing.csail.mit.edu/2020/version-control/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Missing Semester Version Control lecture"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git Book"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://try.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Resources to learn Git"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"vs-code-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-workflow"}},[t._v("#")]),t._v(" VS Code Workflow")]),t._v(" "),s("h4",{attrs:{id:"creating-a-repo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-repo"}},[t._v("#")]),t._v(" Creating a repo")]),t._v(" "),s("p",[t._v("First we're going to initialize a git repository. This is just a\nfolder/directory that has it's changes tracked by git.")]),t._v(" "),s("ol",[s("li",[t._v("Open up VS Code, make sure you have the "),s("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=FunctionalGenomics.functional-genomics",target:"_blank",rel:"noopener noreferrer"}},[t._v("functional genomics extension pack"),s("OutboundLink")],1),t._v(" installed")]),t._v(" "),s("li",[s("code",[t._v("CTRL+Shift+p")])]),t._v(" "),s("li",[t._v("Type in and select "),s("code",[t._v("Git: Initialize Repository")]),t._v(".")]),t._v(" "),s("li",[t._v("Choose a folder. (name it "),s("code",[t._v("ag-git-intro")]),t._v(")")]),t._v(" "),s("li",[t._v("Click the Open/Open in new window popup in the bottom right corner")])]),t._v(" "),s("h4",{attrs:{id:"first-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#first-commit"}},[t._v("#")]),t._v(" First Commit")]),t._v(" "),s("p",[t._v("Now we're going to make our first change, stage that change, and then commit it.")]),t._v(" "),s("ol",[s("li",[t._v("Create a new file called "),s("code",[t._v("README.md")]),t._v(".")]),t._v(" "),s("li",[t._v("Add to the first line "),s("code",[t._v("# ag-git-intro")]),t._v(" and save.")]),t._v(" "),s("li",[t._v("Select the git graph icon on the left bar(It should have a blue 1)")]),t._v(" "),s("li",[t._v("Click on the + button next to "),s("code",[t._v("README.md")]),t._v(".")])]),t._v(" "),s("p",[t._v("Our change has now been staged! We need to commit it to the git repo")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v('Type a message into the "Message" box ("Add README" would be a great message)')]),t._v(" "),s("li",[t._v("Hit "),s("code",[t._v("Ctrl+Enter")])])]),t._v(" "),s("p",[t._v("That was the first commit!")]),t._v(" "),s("h4",{attrs:{id:"second-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#second-commit"}},[t._v("#")]),t._v(" Second commit")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Ctrl+p")]),t._v(" and select "),s("code",[t._v("README.md")]),t._v(".\n"),s("ul",[s("li",[t._v("This is a handy way to jump between files in VS Code")])])]),t._v(" "),s("li",[t._v("Change the file to have")])]),t._v(" "),s("div",{staticClass:"language-md line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" ag-git-intro")]),t._v("\n\nThis is a mistake!\nThis will be the second commit\nThis will be the third commit\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Select the git graph icon on the left bar(It should have a blue 1)")]),t._v(" "),s("li",[t._v("Click on the + button next to "),s("code",[t._v("README.md")]),t._v(".")])]),t._v(" "),s("p",[t._v("This time we staged some changes we didn't mean to. We need to remove those and\nbreak our commits up into logical sections, rather than commit everything at\nonce.")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Click on the - button next to "),s("code",[t._v("README.md")]),t._v(" under Staged Changes.")])]),t._v(" "),s("p",[t._v("That just unstaged what we staged before we commited it.")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("Click on "),s("code",[t._v("README.md")]),t._v(" and this will pull up a "),s("strong",[t._v("diff")]),t._v(", which is the\ndifference between what's committed to the repo, and the working copy.")]),t._v(" "),s("li",[t._v('Highlight the 3 and 4 lines, right click and select "Stage Selected Ranges"')]),t._v(" "),s("li",[t._v("We want to get rid of the mistake we staged, so click on "),s("code",[t._v("README.md")]),t._v(' under\n"Staged Changes", highlight line 2("This is a mistake!"), right click and\nselect "Unstage Selected Ranges".')])]),t._v(" "),s("p",[t._v("Now we want to commit our changes:")]),t._v(" "),s("ol",{attrs:{start:"8"}},[s("li",[t._v('Type a message into the "Message" box ("Update README" would be a great message)')]),t._v(" "),s("li",[t._v("Hit "),s("code",[t._v("Ctrl+Enter")])])]),t._v(" "),s("p",[t._v('Now for practice, commit only the line that has "This will be the third commit"')]),t._v(" "),s("h4",{attrs:{id:"viewing-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#viewing-changes"}},[t._v("#")]),t._v(" Viewing changes")]),t._v(" "),s("ol",[s("li",[t._v('In the Source Control window, open the "COMMITS" drawer. You should see')])]),t._v(" "),s("p",[s("img",{attrs:{src:o(362),alt:"VS Code Commits"}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v('You can click though the "FILE HISTORY" and view old versions of the file')])]),t._v(" "),s("h1",{attrs:{id:"documentation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),s("h1",{attrs:{id:"assignment-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assignment-2"}},[t._v("#")]),t._v(" Assignment 2")]),t._v(" "),s("ol",[s("li",[t._v("Create a fork of the course material")]),t._v(" "),s("li",[t._v("Clone that repo locally")]),t._v(" "),s("li",[t._v("Open up "),s("code",[t._v("docs/index.md")])]),t._v(" "),s("li",[t._v("Add your name and semester to the Alumni table")]),t._v(" "),s("li",[t._v("Create a PR to the main repo")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Check out")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/firstcontributions/first-contributions",target:"_blank",rel:"noopener noreferrer"}},[t._v("First-contributions"),s("OutboundLink")],1),t._v("\nor "),s("a",{attrs:{href:"https://github.com/firstcontributions/first-contributions/blob/master/gui-tool-tutorials/github-windows-vs-code-tutorial.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("First contributions with\nVS-code"),s("OutboundLink")],1),t._v("\nfor ideas.")])]),t._v(" "),s("hr",{staticClass:"footnotes-sep"}),t._v(" "),s("section",{staticClass:"footnotes"},[s("ol",{staticClass:"footnotes-list"},[s("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[s("p",[t._v("04-git_workshop of HPC "),s("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[t._v("↩︎")])])]),t._v(" "),s("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[s("p",[s("a",{attrs:{href:"https://missing.csail.mit.edu/2020/version-control/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Missing Semester Version Control lecture"),s("OutboundLink")],1),t._v(" "),s("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[t._v("↩︎")])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);