"use strict";(self.webpackChunkapplied_genomics=self.webpackChunkapplied_genomics||[]).push([[2720],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return n?r.createElement(h,o(o({ref:t},m),{},{components:n})):r.createElement(h,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4845:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var r=n(3117),a=(n(7294),n(3905));const i={id:"make",title:"Make",description:"How to use make",sidebar_label:"Make",sidebar_position:5},o="Build Systems",l={unversionedId:"week_02/make",id:"version-22u/week_02/make",title:"Make",description:"How to use make",source:"@site/versioned_docs/version-22u/week_02/make.md",sourceDirName:"week_02",slug:"/week_02/make",permalink:"/Applied-Genomics/docs/22u/week_02/make",draft:!1,editUrl:"https://github.com/Functional-Genomics-Lab/Applied-Genomics/edit/main/versioned_docs/version-22u/week_02/make.md",tags:[],version:"22u",sidebarPosition:5,frontMatter:{id:"make",title:"Make",description:"How to use make",sidebar_label:"Make",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Documentation",permalink:"/Applied-Genomics/docs/22u/week_02/documentation"},next:{title:"RNA-Seq",permalink:"/Applied-Genomics/docs/22u/rna-seq/"}},s={},c=[{value:"Intro to Make",id:"intro-to-make",level:2},{value:"Let&#39;s commit the changes!",id:"lets-commit-the-changes",level:3},{value:"Creating a branch",id:"creating-a-branch",level:4},{value:".gitignore",id:"gitignore",level:4},{value:"Commit",id:"commit",level:4}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"build-systems"},"Build Systems"),(0,a.kt)("p",null,"Codebases for scientific projects are usually on the smaller end of the\nspectrum. They also usually have small development teams. Because they have\nsmall teams they have a low ",(0,a.kt)("a",{parentName:"p",href:"https://www.wikipedia.org/wiki/Bus_factor"},"bus\nfactor")," and that cause codebases to\nfall away quickly when core members move on."),(0,a.kt)("p",null,"So to solve this problem you could write down a bunch of shell commands used to\ninstall or run your code. Or you could just use ",(0,a.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/make/"},"GNU Make")),(0,a.kt)("h2",{id:"intro-to-make"},"Intro to Make"),(0,a.kt)("p",null,"See ",(0,a.kt)("inlineCode",{parentName:"p"},"The Art of Bioinformatics Scripting")," Chapter 2 (Pages ",(0,a.kt)("strong",{parentName:"p"},"59-73"),")"),(0,a.kt)("h3",{id:"lets-commit-the-changes"},"Let's commit the changes!"),(0,a.kt)("h4",{id:"creating-a-branch"},"Creating a branch"),(0,a.kt)("p",null,"First, let's learn to make a branch. Here's a visual representation of branches"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://wac-cdn.atlassian.com/dam/jcr:746be214-eb99-462c-9319-04a4d2eeebfa/01.svg?cdnVersion=1629",alt:"Git branches"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A branch represents an independent line of development. Branches serve as an abstraction for the edit/stage/commit process. You can think of them as a way to request a brand new working directory, staging area, and project history. New commits are recorded in the history for the current branch, which results in a fork in the history of the project. ",(0,a.kt)("sup",{parentName:"p",id:"fnref-3"},(0,a.kt)("a",{parentName:"sup",href:"#fn-3",className:"footnote-ref"},"3")))),(0,a.kt)("p",null,"There are a few ways to create a branch using VS Code. Let's use ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P")," and search for ",(0,a.kt)("inlineCode",{parentName:"p"},"Git: Create Branch from"),". Then use the name ",(0,a.kt)("inlineCode",{parentName:"p"},"make")," and then select ",(0,a.kt)("inlineCode",{parentName:"p"},"head")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"master"),"."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"Ctrl+Shift+P")),(0,a.kt)("li",{parentName:"ol"},"Search for ",(0,a.kt)("inlineCode",{parentName:"li"},"Git: Create Branch from"),"."),(0,a.kt)("li",{parentName:"ol"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"make")," for the name of the branch."),(0,a.kt)("li",{parentName:"ol"},"Create the branch from ",(0,a.kt)("inlineCode",{parentName:"li"},"master"),".")),(0,a.kt)("h4",{id:"gitignore"},".gitignore"),(0,a.kt)("p",null,"But we have a bunch of ",(0,a.kt)("em",{parentName:"p"},"build artifacts")," in our directory. These\nshouldn't be added to the git repo, because they aren't code(A source of truth),\nthey're something the code creates(A ",(0,a.kt)("em",{parentName:"p"},"side effect"),")."),(0,a.kt)("p",null,"You might notice that git picked up all of the txt files. A special file called\n",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," will tell git to ignore them and avoid tracking their history. Create it and throw the following the file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gitignore",metastring:'title=".gitignore"',title:'".gitignore"'},"reads/\nrefs/\nvcf/\n*.bam\n")),(0,a.kt)("h4",{id:"commit"},"Commit"),(0,a.kt)("p",null,"Now let's commit it. Same thing as before, refer to ",(0,a.kt)("a",{parentName:"p",href:"./git#first-commit"},"The git first commit\nsection")," if you need a refresher!"),(0,a.kt)("h1",{id:"further-reading"},"Further reading"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://devhints.io/makefile"},"Dev Hints Makefile cheatsheet"))),(0,a.kt)("div",{className:"footnotes"},(0,a.kt)("hr",{parentName:"div"}),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol",id:"fn-3"},(0,a.kt)("a",{parentName:"li",href:"https://www.atlassian.com/git/tutorials/using-branches"},"Atlassian Git Branch Tutorial"),(0,a.kt)("a",{parentName:"li",href:"#fnref-3",className:"footnote-backref"},"\u21a9")))))}p.isMDXComponent=!0}}]);